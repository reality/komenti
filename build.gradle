/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/tutorial_groovy_projects.html
 */


plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'jacoco'
    id 'com.github.dawnwords.jacoco.badge' version '0.2.0'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:2.5.10'


    implementation 'commons-cli:commons-cli:1.4'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'edu.stanford.nlp:stanford-corenlp:3.9.2'
    implementation 'edu.stanford.nlp:stanford-corenlp:3.9.2:models'
    implementation 'edu.stanford.nlp:stanford-parser:3.9.2'
    implementation('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1')
    implementation 'org.apache.pdfbox:pdfbox:2.0.15'
    implementation 'org.codehaus.gpars:gpars:1.2.1'

    implementation 'net.sourceforge.owlapi:owlapi-api:5.1.4'
    implementation 'net.sourceforge.owlapi:owlapi-apibinding:5.1.4'
    implementation 'net.sourceforge.owlapi:owlapi-impl:5.1.4'
    implementation 'net.sourceforge.owlapi:owlapi-parsers:5.1.4'

    implementation 'org.apache.commons:commons-rdf-api:0.5.0'
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.12.0'

    implementation('org.apache.httpcomponents:httpclient') {
      version {
        strictly '4.5.10'
      } 
    }
    implementation('org.apache.httpcomponents:httpmime') {
      version {
        strictly '4.5.10'
      } 
    }
    implementation('org.apache.httpcomponents:httpcore') {
      version {
        strictly '4.4.12'
      } 
    }
implementation('org.apache.httpcomponents:httpcore-osgi') {
      version {
        strictly '4.4.12'
      } 
    }

    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}


application {
    // Define the main class for the application.
    mainClassName = 'komenti.App'
}

task distribution {
    doLast {
        println "We build the zip with version=$version"
    }
}

task release {
    dependsOn 'distribution'
    doLast {
        println 'We release now'
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(":release")) {
        version = '0.2.0'
    } else {
        version = '0.2.0-SNAPSHOT'
    }
}

jacoco {
  toolVersion = '0.8.7-SNAPSHOT'
}

test {
  maxHeapSize = "6G"
  testLogging {
    events "started", "skipped", "failed"
    exceptionFormat "full"
  }
  finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
  dependsOn test // tests are required to run before generating the report
  reports {
    xml.enabled true
  }
}




